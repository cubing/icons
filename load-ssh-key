#!/usr/bin/env bash

# This script decrypts the contents of `deploy_key.enc` and starts up a
# `ssh-agent` instance with that key loaded. Wrap commands with this script in
# order to give them ssh credentials they otherwise wouldn't have. For example:
#
# ./load-ssh-key git push ...
#
# (inspired by https://ukgovdatascience.github.io/rap-website/article-deployment-ci-with-travis.html)
#
# If you ever need to regenerate deploy_key.enc, here's how:
#
#  1. `ssh-keygen -t rsa -b 4096 -C "deploy key for cubing/icons" -N "" -f ./deploy_key` - This will generate a deploy_key and deploy_key.pub.
#  2. `travis encrypt-file deploy_key` - This will generate a `deploy_key.enc`.
#  3. Add `deploy_key.pub` to https://github.com/cubing/icons/settings/keys with
#     a description that makes it clear that it's used by Travis.
#  4. Commit `deploy_key.enc`. Delete `deploy_key` and `deploy_key.pub`.

function cleanup {
    if [ -n "$SSH_AGENT_PID" ]; then
        echo "Cleaning up ssh-agent"
        eval "$(ssh-agent -k)"
    fi
}
trap cleanup EXIT

if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
    if [ ! -f deploy_key ]; then
        echo "Decrypting deploy_key.enc to generate deploy_key"
        openssl aes-256-cbc -K $encrypted_189e52c2c347_key -iv $encrypted_189e52c2c347_iv -in deploy_key.enc -out deploy_key -d
    fi
    eval "$(ssh-agent -s)" # Start the ssh agent
    chmod 600 deploy_key
    ssh-add deploy_key
fi

"$@"
